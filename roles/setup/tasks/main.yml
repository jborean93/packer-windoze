# Hyper-V needs to set a static IP on the interface as part of the bootstrap script. These steps determine the
# current network settings and what IP/Gateway to set the VM as.
- name: get WSL2 IP settings
  set_fact:
    hyperv_current_ip: '{{ lookup("jborean93.windoze.ip_info") }}'
  when: platform == 'hyperv'

- name: get Hyper-V IP settings
  set_fact:
    hyperv_ip: >-
      {{
          hyperv_current_ip.ip | jborean93.windoze.ip_addr(
              [hyperv_current_ip.gateway], 0 + groups["setup"].index(inventory_hostname)
          )
      }}
    hyperv_ip_prefix: '{{ hyperv_current_ip.prefixlen }}'
    hyperv_gateway: '{{ hyperv_current_ip.gateway }}'
  when: platform == 'hyperv'

- name: process host specific overrides
  set_fact:
    iso_src: '{{ hostvars[inventory_hostname]["iso_src_" ~ inventory_hostname] | default(iso_src) }}'
    iso_checksum: >-
      {{
        (hostvars[inventory_hostname]["iso_src_" ~ inventory_hostname] is defined) | ternary(
            hostvars[inventory_hostname]["iso_checksum_" ~ inventory_hostname] | default(""),
            iso_checksum
        )
      }}
    iso_wim_label: '{{ hostvars[inventory_hostname]["iso_wim_label_" ~ inventory_hostname] | default(iso_wim_label) }}'

- name: load changelog settings
  include_vars:
    file: '{{ playbook_dir }}/.changelog.yml'

- name: generate the main CHANGELOG.md
  template:
    src: CHANGELOG.md.tmpl
    dest: '{{ playbook_dir }}/CHANGELOG.md'
  run_once: True

- name: set default Chocolatey packages to install
  set_fact:
    default_choco_packages:
    - vim
    - sysinternals

- name: add pwsh to default packages if not running 2012
  set_fact:
    default_choco_packages: '{{ default_choco_packages + ["pwsh"] }}'
  when: inventory_hostname != '2012'

- name: create common build directory
  file:
    path: '{{ output_dir }}/common'
    state: directory
  run_once: True

- name: download latest Microsoft code verification root certificate for older hosts
  get_url:
    url: https://www.microsoft.com/pki/certs/MicrosoftCodeVerifRoot.crt
    dest: '{{ output_dir }}/common/MicrosoftCodeVerifRoot.crt'
    checksum: sha256:ca7791d5c9a1580dcdcad31d0549fea2043e229aa4f4932cfa056ca23eb8a950
  register: verif_root_cert
  run_once: True

- name: download latest VeriSign universal root for VirtIO signed devices
  get_url:
    url: https://symantec.tbs-certificats.com/vsign-universal-root.crt
    dest: '{{ output_dir }}/common/VeriSignUniversalRoot.crt'
    checksum: sha256:2de340400722f15d90e11b08cf9f3bfaa7f15eca7151f5a9c3eb8e7a6588da30
  register: verisign_root_cert
  run_once: True

- name: download Virtio ISO
  get_url:
    url: https://fedorapeople.org/groups/virt/virtio-win/direct-downloads/archive-virtio/virtio-win-{{ virtio_version }}/virtio-win.iso
    dest: '{{ output_dir }}/common/virtio-win.iso'
  when: platform != 'hyperv'
  run_once: True

- name: create host specific build directory
  file:
    path: '{{ output_dir }}/{{ inventory_hostname }}/iso'
    state: directory

- name: template out the description for the box
  template:
    src: description.md.tmpl
    dest: '{{ output_dir }}/{{ inventory_hostname }}/description.md'

- name: download WMFv3 hotfix for Server 2012
  get_url:
    url: https://s3.amazonaws.com/ansible-ci-files/hotfixes/KB2842230/463941_intl_x64_zip.exe
    dest: '{{ output_dir }}/{{ inventory_hostname }}/iso/KB2842230-wmfv3.zip'
  register: wmf3_hotfix
  when: inventory_hostname == '2012'

- name: get the latest Windows updates
  jborean93.windoze.win_update_info:
    name: '{{ updates.names }}'
    product: '{{ updates.product }}'
    architecture: '{{ architecture }}'
    sort: last_updated
    ignore_terms:  # Sometimes .NET and Preview updates appear in our search terms, we don't want them in the initial bootstrapping
    - \.NET
    - Preview
  register: update_information
  until: update_information is successful
  retries: 5
  delay: 0

- name: download the latest updates found
  get_url:
    url: '{{ item[0].url }}'
    dest: '{{ output_dir }}/{{ inventory_hostname }}/iso/{{ item[0].kb }}.msu'
  register: downloaded_updates
  when: item | length > 0
  loop: '{{ update_information.updates }}'
  loop_control:
    label: '{{ "skipped" if item | length == 0 else item[0].title }}'

- name: build update list for bootstrap script
  set_fact:
    update_files: >-
      {{
          update_files | default([]) + [
              {
                  "title": item[0].title,
                  "filename": item[0].kb ~ '.msu',
              }
          ]
      }}
  when: item | length > 0
  loop: '{{ update_information.updates }}'
  loop_control:
    label: '{{ "skipped" if item | length == 0 else item[0].title }}'

- name: create Autounattend.xml file
  template:
    src: '{{ item }}.tmpl'
    dest: '{{ output_dir }}/{{ inventory_hostname }}/iso/{{ item }}'
    newline_sequence: \r\n
  register: iso_template_files
  loop:
  - Autounattend.xml
  - bootstrap.ps1

- name: set secondary iso path fact
  set_fact:
    secondary_iso_src: '{{ output_dir }}/{{ inventory_hostname }}/{{ inventory_hostname }}-secondary.iso'

- name: create secondary iso
  command: >-
    mkisofs -RJ -l
    -input-charset iso8859-1
    -quiet
    -o {{ secondary_iso_src | quote }}
    {{ (output_dir ~ '/' ~ inventory_hostname ~ '/iso') | quote }}
    {{ (output_dir ~ '/common/MicrosoftCodeVerifRoot.crt') | quote }}
    {{ (output_dir ~ '/common/VeriSignUniversalRoot.crt') | quote }}
  when: >-
    verif_root_cert is changed or
    verisign_root_cert is changed or
    (inventory_hostname == '2012' and wmf3_hotfix is changed) or
    downloaded_updates is changed or
    iso_template_files is changed

- block:
  - name: download Windows ISO
    get_url:
      url: '{{ iso_src }}'
      dest: '{{ output_dir }}/{{ inventory_hostname }}/{{ inventory_hostname }}-windows.iso'
      checksum: '{{ iso_checksum | default(omit, True) }}'

  - set_fact:
      iso_src: '{{ output_dir }}/{{ inventory_hostname }}/{{ inventory_hostname }}-windows.iso'

  when: iso_src.startswith('http') or iso_src.startswith('https')

- name: determine port to forward onto VM guest
  set_fact:
    guest_host: 127.0.0.1
    guest_port: '{{ 29500 + (groups["setup"].index(inventory_hostname) * 2) }}'

- name: start build VM
  include_tasks: '{{ platform }}.yml'

- name: add Windows host to host list
  add_host:
    name: 'win-{{ inventory_hostname }}'
    ansible_host: '{{ guest_host }}'
    ansible_port: '{{ guest_port }}'
    windoze_version: '{{ changelog[0].version }}'
    platform: '{{ platform }}'
    architecture: '{{ architecture }}'
    driver_host_string: '{{ driver_host_string }}'
    choco_packages: '{{ choco_packages | default(default_choco_packages) }}'
    groups:
    - windows
  changed_when: False
